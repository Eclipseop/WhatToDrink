// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["orderByRelation"]
}

model Cocktail {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  image        String
  ingredients  Ingredient[]
  UserFavorite UserFavorite[]
}

model Ingredient {
  id         Int       @id @default(autoincrement())
  name       String
  Cocktail   Cocktail? @relation(fields: [cocktailId], references: [id])
  cocktailId Int?
  amount     String
}

model UserIngredient {
  id     Int     @id @default(autoincrement())
  name   String
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model UserFavorite {
  int        Int       @id @default(autoincrement())
  cocktail   Cocktail? @relation(fields: [cocktailId], references: [id])
  cocktailId Int?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  Int
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String           @id @default(cuid())
  name          String?
  email         String?          @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  accounts      Account[]
  sessions      Session[]
  ingredients   UserIngredient[]
  UserFavorite  UserFavorite[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
